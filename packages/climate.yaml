sensor:
  - platform: template
    sensors:
      climate_mode:
        value_template: >
          {%- if state_attr('climate.home', 'preset_mode')|lower == 'away' -%}
            Away
          {%- else -%}
            {{ states('climate.home')|capitalize }}
          {%- endif -%}

      climate_operation:
        value_template: >
          {% set operation = state_attr('climate.home', 'hvac_action') %}
          {%- if operation == 'cooling' or operation == "heating" -%}
            1
          {%- else -%}
            0
          {%- endif -%}

      family_room_status:
        friendly_name_template: "{% if is_state('binary_sensor.family_room_occupancy', 'off') %}Not {% endif %}Occupied"
        value_template: "{{ states('sensor.family_room_temperature')|round(0) }}"
        unit_of_measurement: °F
        entity_picture_template: /local/thermometer-{{ states('binary_sensor.family_room_occupancy') }}.svg

      living_room_status:
        friendly_name_template: "{% if is_state('binary_sensor.living_room_occupancy', 'off') %}Not {% endif %}Occupied"
        value_template: "{{ states('sensor.living_room_temperature')|round(0) }}"
        unit_of_measurement: °F
        entity_picture_template: /local/thermometer-{{ states('binary_sensor.living_room_occupancy') }}.svg

      playroom_status:
        friendly_name_template: "{% if is_state('binary_sensor.playroom_occupancy', 'off') %}Not {% endif %}Occupied"
        value_template: "{{ states('sensor.playroom_temperature')|round(0) }}"
        unit_of_measurement: °F
        entity_picture_template: /local/thermometer-{{ states('binary_sensor.playroom_occupancy') }}.svg

      boys_bedroom_status:
        friendly_name_template: "{% if is_state('binary_sensor.boys_bedroom_occupancy', 'off') %}Not {% endif %}Occupied"
        value_template: "{{ states('sensor.boys_bedroom_temperature')|round(0) }}"
        unit_of_measurement: °F
        entity_picture_template: /local/thermometer-{{ states('binary_sensor.boys_bedroom_occupancy') }}.svg

      master_bedroom_status:
        friendly_name_template: "{% if is_state('binary_sensor.master_bedroom_occupancy', 'off') %}Not {% endif %}Occupied"
        value_template: "{{ states('sensor.master_bedroom_temperature')|round(0) }}"
        unit_of_measurement: °F
        entity_picture_template: /local/thermometer-{{ states('binary_sensor.master_bedroom_occupancy') }}.svg

      guest_bedroom_status:
        friendly_name_template: "{% if is_state('binary_sensor.guest_bedroom_occupancy', 'off') %}Not {% endif %}Occupied"
        value_template: "{{ states('sensor.guest_bedroom_temperature')|round(0) }}"
        unit_of_measurement: °F
        entity_picture_template: /local/thermometer-{{ states('binary_sensor.guest_bedroom_occupancy') }}.svg


automation:
  - alias: Climate - House Fan On
    initial_state: True
    trigger:
      platform: state
      entity_id: switch.house_fan_switch
      to: "on"
      from: "off"
    action:
      - service: script.hvac_windows_open
      - delay: "00:00:30"
      - wait_template: "{{ is_state('group.doors_and_windows', 'off') }}"
      - service: script.hvac_windows_closed

  - alias: Climate - Windows Open
    initial_state: True
    trigger:
      - platform: state
        entity_id: group.doors_and_windows
        to: "on"
        for: "00:05:00"
    action:
      - service: script.hvac_windows_open
      - delay: "00:00:30"
      - wait_template: "{{ is_state('group.doors_and_windows', 'off') }}"
      - service: script.hvac_windows_closed


script:
  hvac_windows_open:
    sequence:
      - service: climate.set_preset_mode
        data:
          entity_id: climate.home
          preset_mode: "smart1"

  hvac_windows_closed:
    sequence:
      - service: ecobee.resume_program
        data:
          entity_id: climate.home
