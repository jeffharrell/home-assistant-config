sensor:
  - platform: template
    sensors:
      climate_operation:
        value_template: >
          {% set operation = state_attr('climate.home', 'hvac_action') %}
          {%- if operation == 'cooling' or operation == "heating" -%}1{%- else -%}0{%- endif -%}


automation:
  - alias: Climate - Windows open
    initial_state: True
    trigger:
      - platform: state
        entity_id: binary_sensor.doors_and_windows
        to: "on"
        for: "00:20:00"
    action:
      - service: script.hvac_disable
      - service: notify.phones
        data_template:
          title: "Home"
          message: "Turning HVAC off since window is open"
      - delay: "00:00:10"
      - wait_template: "{{ is_state('binary_sensor.doors_and_windows', 'off') }}"
      - service: script.hvac_resume

  - alias: Climate - Disable HVAC with house fan
    initial_state: True
    trigger:
      platform: state
      entity_id: switch.house_fan
      to: "on"
      from: "off"
    action:
      - service: script.hvac_disable
      - delay: "00:00:10"
      - wait_template: "{{ is_state('binary_sensor.doors_and_windows', 'off') }}"
      - service: script.hvac_resume

  - alias: Climate - Away
    initial_state: True
    trigger:
      - platform: state
        entity_id: alarm_control_panel.abode_alarm
        to: "armed_away"
        for: "12:00:00"
    action:
      - service: script.hvac_disable
      - service: notify.phones
        data_template:
          title: "Home"
          message: "Setting thermostat to away"
      - delay: "00:00:10"
      - wait_template: "{{ is_state('alarm_control_panel.abode_alarm', 'disarmed') }}"
      - service: script.hvac_resume

  - alias: Climate - House fan is running while other equipment is
    initial_state: True
    trigger:
      - platform: state
        entity_id: sensor.climate_operation
        to: "1"
        variables:
          equipment: "HVAC"
      - platform: state
        entity_id: sensor.dryer
        to: "on"
        variables:
          equipment: "dryer"
    condition:
      condition: template
      value_template: "{{ is_state('switch.house_fan', 'on') }}"
    action:
      - service: notify.phones
        data_template:
          title: "Home"
          message: "House fan and {{ equipment }} are both running!"