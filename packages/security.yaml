group:
  doors_and_windows:
    entities:
      - binary_sensor.family_room_doors
      - binary_sensor.master_bedroom_doors
      - binary_sensor.dining_room_window
      - binary_sensor.living_room_window_left
      - binary_sensor.living_room_window_right
      - binary_sensor.kitchen_window
      - binary_sensor.boys_window
      - binary_sensor.playroom_window
      - binary_sensor.guest_window
      - binary_sensor.master_bedroom_window
  entrances:
    entities:
      - binary_sensor.front_door
      - binary_sensor.laundry_room_door
      - binary_sensor.garage_side_door
      - binary_sensor.garage_door_1
      - binary_sensor.garage_door_2
      - binary_sensor.garage_door_3
  security:
    entities:
      - group.doors_and_windows
      - group.entrances


homeassistant:
    customize_glob:
      "binary_sensor.garage_door_*":
        device_class: opening
      "binary_sensor.garage_side_door":
        device_class: opening


camera:
  - platform: local_file
    name: Latest Doorbell 
    file_path: /config/www/cameras/doorbell.jpg
  - platform: local_file
    name: Latest Mailbox 
    file_path: /config/www/cameras/mailbox.jpg


cover:
  - platform: template
    covers:
        garage_door_1:
            device_class: garage
            unique_id: "garage_door_1"
            value_template: "{{ is_state('binary_sensor.garage_door_1', 'on') }}"
            open_cover:
                service: switch.turn_on
                entity_id: switch.garage_door_1
            close_cover:
                service: switch.turn_on
                entity_id: switch.garage_door_1
            stop_cover:
                service: switch.turn_on
                entity_id: switch.garage_door_1
        garage_door_2:
            device_class: garage
            unique_id: "garage_door_2"
            value_template: "{{ is_state('binary_sensor.garage_door_2', 'on') }}"
            open_cover:
                service: switch.turn_on
                entity_id: switch.garage_door_2
            close_cover:
                service: switch.turn_on
                entity_id: switch.garage_door_2
            stop_cover:
                service: switch.turn_on
                entity_id: switch.garage_door_2
        garage_door_3:
            device_class: garage
            unique_id: "garage_door_3"
            value_template: "{{ is_state('binary_sensor.garage_door_3', 'on') }}"
            open_cover:
                service: switch.turn_on
                entity_id: switch.garage_door_3
            close_cover:
                service: switch.turn_on
                entity_id: switch.garage_door_3
            stop_cover:
                service: switch.turn_on
                entity_id: switch.garage_door_3


automation:
  - alias: Security - Say status
    initial_state: True
    trigger:
      - platform: state
        entity_id: alarm_control_panel.abode_alarm
        to: "armed_home"
      - platform: state
        entity_id: alarm_control_panel.abode_alarm
        to: "armed_away"
      - platform: state
        entity_id: alarm_control_panel.abode_alarm
        to: "disarmed"
    condition:
      condition: template
      value_template: "{{ trigger.from_state.state != 'unavailable' }}"
    action:
      - service: tts.google_say
        entity_id: media_player.master_bedroom_speaker
        data_template:
          message: >
            {% set status = states("alarm_control_panel.abode_alarm") %}

            {%- if status == "disarmed" -%}
              Alarm off
            {%- elif status == "armed_home" -%}
              Alarm armed...

              {%- if is_state("group.security", "on") -%}
                Warning â€“ The following are open:
                {%- for entity in expand("group.security") -%}
                  {%- if entity.state == "on" -%}
                    ... {{ entity.name }}
                  {%- endif -%}
                {%- endfor -%}
              {%- endif -%}
            {%- endif -%}

  - alias: Security - Turn house off
    initial_state: True
    trigger:
      platform: state
      entity_id: alarm_control_panel.abode_alarm
      to: "armed_away"
    action:
      - service: homeassistant.turn_off
        entity_id:
          - group.lights
          - switch.house_fan_switch
          - remote.family_room


  - alias: Security - Alert lighting
    initial_state: True
    trigger:
      platform: event
      event_type: abode_alarm
    action:
      - service: homeassistant.turn_on
        entity_id:
          - switch.kitchen_cabinets
          - switch.living_room
          - switch.hallway
          - switch.back_yard_switch
          - switch.front_yard_switch
          - switch.boys_bedroom
      - service: light.turn_on
        entity_id:
          - light.kitchen_1
          - light.kitchen_2
          - light.island
          - light.family_room
          - light.dining_room
          - light.entryway
          - light.master_bedroom
          - light.guest_bedroom
          - light.play_room
        data:
          brightness: 255

  - alias: Security - Alert
    initial_state: True
    trigger:
      platform: event
      event_type: abode_alarm
    action:
      - service: notify.phones
        data_template:
          title: "Home"
          message: "Alarm alert!"
          data:
            entity_id: camera.front_door
            url: "/lovelace/cameras"
            push:
              sound:
                name: "default"
                critical: 1
                volume: 1
      - service: system_log.write
        data_template:
          message: "Alarm: {{ trigger.event.data }}"
          level: error

  - alias: Security - Fault
    initial_state: True
    trigger:
      - platform: event
        event_type: abode_panel_fault
      - platform: event
        event_type: abode_panel_restore
    action:
      - service: notify.phones
        data:
          title: "Home"
          message: "Alarm Fault {{ trigger.event.data.event_name }}"
          data:
            url: "/config/logs"

      - service: system_log.write
        data_template:
          message: "Alarm Fault {{ trigger.event.data }}"
          level: error

  - alias: Security - Doorbell notifications
    initial_state: True
    trigger:
      platform: state
      entity_id: binary_sensor.doorbell_sensor
      to: "on"
    action:
      - service: camera.snapshot
        data:
          entity_id: camera.front_door
          filename: "/config/www/cameras/doorbell.jpg"
      - service: notify.phones
        data_template:
          title: "Home"
          message: "Doorbell"
          data:
            entity_id: camera.front_door
            url: "/lovelace/cameras"
      - delay:
          minutes: 1

  - alias: Security - Garage door open
    initial_state: True
    trigger:
      platform: state
      entity_id:
        - binary_sensor.garage_door_1
        - binary_sensor.garage_door_2
        - binary_sensor.garage_door_3
      to: "on"
      for:
        minutes: 10
    mode: parallel
    action:
      - service: notify.phones
        data_template:
          title: "Home"
          message: "{{ trigger.to_state.attributes.friendly_name }} was left open"

  - alias: Security - Mailbox open
    initial_state: True
    mode: single
    trigger:
      - platform: state
        entity_id: binary_sensor.mailbox_motion
        to: "on"
    action:
      - service: camera.snapshot
        data:
          entity_id: camera.driveway
          filename: "/config/www/cameras/mailbox.jpg"
      - service: notify.phones
        data_template:
          title: "Home"
          message: "Mailbox motion detected!"
          data:
            url: "/lovelace/cameras"
            push:
              sound:
                name: "default"
                critical: "{{ (states('sun.sun') == 'below_horizon')|int }}"
                volume: "{{ (states('sun.sun') == 'below_horizon')|int }}"
      - delay:
          minutes: 1


script:
  alarm_disarm_silently:
    mode: restart
    sequence:
      - service: automation.turn_off
        data:
          entity_id: automation.security_say_status
      - service: alarm_control_panel.alarm_disarm
        data:
          entity_id: alarm_control_panel.abode_alarm
      - delay: "00:30:00"
      - service: alarm_control_panel.alarm_arm_home
        data:
          entity_id: alarm_control_panel.abode_alarm
      - delay: "00:01:00"
      - service: automation.turn_on
        data:
          entity_id: automation.security_say_status

  good_morning:
    sequence:
      - service: alarm_control_panel.alarm_disarm
        data:
          entity_id: alarm_control_panel.abode_alarm
      - condition: template
        value_template: '{{ state_attr("sun.sun", "elevation") < 2 }}'
      - service: scene.turn_on
        data:
          entity_id: scene.good_morning