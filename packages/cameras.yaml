shell_command:
  purge_camera_events: !secret purge_cameras_events_cmd
  record_driveway_camera: !secret record_driveway_camera_cmd

input_text:
  camera_motion_prompt:
    name: "Camera Motion Prompt"
    icon: "mdi:robot"
    max: 255

input_boolean:
  camera_motion_enabled:
    name: "Camera Motion Alerts"
    icon: "mdi:robot"

counter:
  camera_motion:
    name: "Camera Motion Counter"
    icon: mdi:alert
    initial: 0
    restore: True

automation:
  - alias: "Cameras - Doorbell"
    initial_state: True
    mode: queued
    trigger:
      - platform: webhook
        webhook_id: "camera_doorbell"
        local_only: True
    actions:
      # take a picture
      - action: camera.snapshot
        data:
          entity_id: "{{ trigger.json.camera }}"
          filename: "/config/www/cameras/doorbell.jpg"
      # create a text response for that picture
      - action: google_generative_ai_conversation.generate_content
        continue_on_error: true
        data:
          prompt: "{{ states('input_text.camera_motion_prompt') }}"
          filenames:
            - /config/www/cameras/doorbell.jpg
        response_variable: generated_content
      # send notification
      - action: notify.phones
        data_template:
          title: "{{ trigger.json.name }}"
          message: "{{ generated_content.text }}"
          data:
            image: "/local/cameras/doorbell.jpg"
            url: "/lovelace/cameras"
      # update the counter
      - action: counter.increment
        target:
          entity_id: counter.camera_motion

  - alias: "Cameras - Motion"
    initial_state: True
    mode: queued
    trigger:
      - platform: webhook
        webhook_id: "camera_motion"
        local_only: True
    condition:
      condition: template
      value_template: "{{ is_state('input_boolean.camera_motion_enabled', 'on') }}"
    actions:
      # take a picture
      - action: camera.snapshot
        data:
          entity_id: "{{ trigger.json.camera }}"
          filename: "/config/www/cameras/motion.jpg"
      # create a text response for that picture
      - action: google_generative_ai_conversation.generate_content
        continue_on_error: true
        data:
          prompt: "{{ states('input_text.camera_motion_prompt') }}"
          filenames:
            - /config/www/cameras/motion.jpg
        response_variable: generated_content
      # send a notification
      - action: notify.phones
        data_template:
          title: "{{ trigger.json.name }}"
          message: "{{ generated_content.text }}"
          data:
            image: "/local/cameras/motion.jpg"
            url: "/lovelace/cameras"
      # update the counter
      - action: counter.increment
        target:
          entity_id: counter.camera_motion
          
  - alias: "Cameras - Mailbox open"
    initial_state: True
    mode: queued
    max_exceeded: silent
    trigger:
      - platform: state
        entity_id: binary_sensor.mailbox_motion
        to: "on"
    actions:
      # trigger a recording 
      - action: shell_command.record_driveway_camera
        continue_on_error: true
      # take a picture
      - action: camera.snapshot
        data:
          entity_id: camera.driveway
          filename: "/config/www/cameras/mailbox.jpg"
      # create a text response for that picture
      - action: google_generative_ai_conversation.generate_content
        continue_on_error: true
        data:
          prompt: "{{ states('input_text.camera_motion_prompt') }}"
          filenames:
            - /config/www/cameras/mailbox.jpg
        response_variable: generated_content
      # send a notification
      - action: notify.phones
        data_template:
          title: "Mailbox motion"
          message: "{{ generated_content.text }}"
          data:
            image: "/local/cameras/mailbox.jpg"
            url: "/lovelace/cameras"
            push:
              sound:
                name: "default"
                critical: "{{ is_state('sun.sun', 'below_horizon')|int }}"
                volume: "{{ is_state('sun.sun', 'below_horizon')|int }}"
      # update the counter
      - action: counter.increment
        target:
          entity_id: counter.camera_motion
      # debounce
      - delay:
          minutes: 1

  - alias: "Cameras - Reset camera events"
    initial_state: True
    trigger:
      - platform: time
        at: "00:00:00"
    actions:
      - action: counter.reset
        target:
          entity_id: counter.camera_motion
      - action: shell_command.purge_camera_events

  - alias: "Camera - Swap recording profile"
    initial_state: True
    trigger:
      - platform: state
        entity_id: alarm_control_panel.alarm
        to: "armed_away"
        variables:
          action: "turn_off"
      - platform: state
        entity_id: alarm_control_panel.alarm
        to: "disarmed"
        variables:
          action: "turn_on"
    actions:
      - action: >
          switch.{{ action }}
        entity_id: switch.surveillance_station_home_mode
