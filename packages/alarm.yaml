# Template alarm panel to filter alarm states in UI
alarm_control_panel:
  - platform: template
    panels:
      alarm_panel_ui:
        name: "Alarm"
        value_template: "{{ states('alarm_control_panel.alarm') }}"
        code_arm_required: false
        code_format: "no_code"
        arm_away:
          service: alarm_control_panel.alarm_arm_away
          target:
            entity_id: alarm_control_panel.alarm
        arm_home:
          service: alarm_control_panel.alarm_arm_home
          target:
            entity_id: alarm_control_panel.alarm
        disarm:
          service: alarm_control_panel.alarm_disarm
          target:
            entity_id: alarm_control_panel.alarm

automation:
  - alias: "Alarm - Away mode"
    initial_state: True
    trigger:
      - platform: state
        entity_id: alarm_control_panel.alarm
        to: "armed_away"
    action:
      # turn off the devices in house
      - service: scene.turn_on
        data:
          entity_id: scene.house_off
      # update camera motion alerts
      - service: input_boolean.turn_on
        data:
          entity_id: input_boolean.camera_motion_enabled
      # notify if doors or garages are open (with built in delays for leaving)
      - delay: "00:00:15"
      - service: notify.phones
        data_template:
          message: >
            {%- if is_state("binary_sensor.doors_and_windows", "on") -%}
              Warning! The following are open: {{ expand("binary_sensor.doors_and_windows") | selectattr("state", "eq", "on") | map(attribute="name") | join(", ") }}
            {%- endif -%}
      - delay:
          minutes: 10
      - service: notify.phones
        data_template:
          message: >
            {%- if is_state("binary_sensor.garage_doors", "on") -%}
              The garage is still open: {{ expand("binary_sensor.garage_doors") | selectattr("state", "eq", "on") | map(attribute="name") | join(", ") }}
            {%- endif -%}

  - alias: "Alarm - Home mode"
    initial_state: True
    trigger:
      - platform: state
        entity_id: alarm_control_panel.alarm
        to: "armed_home"
    action:
      # turn off the devices in house
      - if:
          condition: state
          entity_id: input_boolean.guest_mode_enabled
          state: "off"
        then:
          service: scene.turn_on
          data:
            entity_id: scene.house_off
        else:
          service: scene.turn_on
          data:
            entity_id: scene.house_off_guest
      # update camera motion alerts
      - service: input_boolean.turn_on
        data:
          entity_id: input_boolean.camera_motion_enabled
      # notify if doors or garages are open
      - service: notify.master_bedroom
        data_template:
          message: >
            Alarm armed...

            {%- if is_state("input_boolean.guest_mode_enabled", "on") -%}
              Guest mode enabled...
            {%- endif -%}

            {%- if is_state("binary_sensor.doors_and_windows_and_garages", "on") -%}
              Warning! The following are open: {{ expand("binary_sensor.doors_and_windows_and_garages") | selectattr("state", "eq", "on") | map(attribute="name") | join(", ") }}
            {%- endif -%}

  - alias: "Alarm - Disarmed mode"
    initial_state: True
    trigger:
      - platform: state
        entity_id: alarm_control_panel.alarm
        to: "disarmed"
    action:
      # notify on status change
      - service: notify.master_bedroom
        data_template:
          message: "Alarm off"
      # update camera motion alerts
      - service: input_boolean.turn_off
        data:
          entity_id: input_boolean.camera_motion_enabled
      # turn on the house if morning
      - condition: time
        before: "08:00:00"
      - service: scene.turn_on
        data:
          entity_id: scene.good_morning

  - alias: "Alarm - Alert"
    initial_state: True
    trigger:
      platform: state
      entity_id: alarm_control_panel.alarm
      to: "triggered"
    action:
      - service: scene.turn_on
        data:
          entity_id: scene.house_alert
      - service: notify.phones
        data_template:
          title: "Home"
          message: "Alarm triggered!"
          data:
            entity_id: camera.front_door
            url: "/lovelace/cameras"
            push:
              sound:
                name: "default"
                critical: 1
                volume: 1